name: S2++ Expected-Fail Tests

on:
  push:
    branches: [ main, feature/s2pp-delta-v2 ]
  pull_request:
    branches: [ main ]

jobs:
  s2pp-expected-fail-pii:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r spec_pack/requirements.txt
    
    - name: Run PII expected-fail tests
      run: |
        python scripts/bench_2cat.py --suite corpus/s2pp/suite.json --modes expected_fail --runs 1 --out artifacts/s2pp/expected_fail_pii --filter pii-logging
    
    - name: Verify PII expected failures
      run: |
        # Check that PII expected fail tests actually fail
        python -c "
        import json
        with open('artifacts/s2pp/expected_fail_pii/results.json') as f:
            results = json.load(f)
        for result in results:
            if result['success']:
                print(f'ERROR: PII expected fail test {result[\"case_name\"]} passed')
                exit(1)
        print('All PII expected fail tests failed as expected')
        "
    
    - name: Upload PII expected fail artifacts
      uses: actions/upload-artifact@v3
      with:
        name: s2pp-expected-fail-pii
        path: artifacts/s2pp/expected_fail_pii/

  s2pp-expected-fail-license:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r spec_pack/requirements.txt
    
    - name: Run License expected-fail tests
      run: |
        python scripts/bench_2cat.py --suite corpus/s2pp/suite.json --modes expected_fail --runs 1 --out artifacts/s2pp/expected_fail_license --filter license-violation-agpl
    
    - name: Verify License expected failures
      run: |
        # Check that License expected fail tests actually fail
        python -c "
        import json
        with open('artifacts/s2pp/expected_fail_license/results.json') as f:
            results = json.load(f)
        for result in results:
            if result['success']:
                print(f'ERROR: License expected fail test {result[\"case_name\"]} passed')
                exit(1)
        print('All License expected fail tests failed as expected')
        "
    
    - name: Upload License expected fail artifacts
      uses: actions/upload-artifact@v3
      with:
        name: s2pp-expected-fail-license
        path: artifacts/s2pp/expected_fail_license/

  s2pp-fairness-report:
    runs-on: ubuntu-latest
    needs: [s2pp-expected-fail-pii, s2pp-expected-fail-license]
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r spec_pack/requirements.txt
    
    - name: Generate fairness report
      run: |
        python scripts/bench_2cat.py --suite corpus/s2pp/suite.json --modes baseline,active --runs 3 --out artifacts/s2pp/fairness
        python scripts/delta_calibrate.py --input artifacts/s2pp/fairness/metrics.csv --out configs/weights_v2.json --report artifacts/s2pp/fairness_report.json --bootstrap 1000
    
    - name: Generate audit pack
      run: |
        Compress-Archive -Path artifacts/s2pp/fairness/*.json,configs/weights_v2.json,configs/policy.yaml -DestinationPath artifacts/s2pp/audit_pack.zip -Force
    
    - name: Upload fairness report
      uses: actions/upload-artifact@v3
      with:
        name: s2pp-fairness-report
        path: artifacts/s2pp/fairness_report.json
    
    - name: Upload audit pack
      uses: actions/upload-artifact@v3
      with:
        name: s2pp-audit-pack
        path: artifacts/s2pp/audit_pack.zip
