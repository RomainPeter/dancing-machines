name: Attest Extended

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["CI Extended"]
    types: [completed]

jobs:
  attest:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Download demo artifacts
      uses: actions/download-artifact@v4
      with:
        name: demo-artifacts
        path: artifacts/
    
    - name: Download attestation
      uses: actions/download-artifact@v4
      with:
        name: attestation
        path: attestation/
    
    - name: Set up Cosign
      uses: sigstore/cosign-installer@v3
      with:
        cosign-release: 'v2.2.0'
    
    - name: Generate Merkle root
      run: |
        python scripts/merkle_journal.py > merkle.txt
        echo "Generated Merkle root: $(cat merkle.txt)"
    
    - name: Create attestation bundle
      run: |
        mkdir -p attestation-bundle
        cp merkle.txt attestation-bundle/
        cp -r artifacts/ attestation-bundle/
        cp attestation/attestation.txt attestation-bundle/
        
        # Create attestation metadata
        cat > attestation-bundle/metadata.json << EOF
        {
          "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "workflow_run_id": "${{ github.event.workflow_run.id }}",
          "repository": "${{ github.repository }}",
          "commit_sha": "${{ github.event.workflow_run.head_sha }}",
          "merkle_root": "$(cat merkle.txt)",
          "artifacts": [
            "DCA.jsonl",
            "PCAP.json", 
            "J.jsonl",
            "metrics.json"
          ]
        }
        EOF
    
    - name: Sign attestation bundle
      run: |
        # Create signature using Cosign
        cosign sign-blob attestation-bundle/metadata.json --output-file attestation-bundle/metadata.json.sig
        
        # Create hash of bundle
        tar -czf attestation-bundle.tar.gz attestation-bundle/
        sha256sum attestation-bundle.tar.gz > attestation-bundle.tar.gz.sha256
    
    - name: Upload signed attestation
      uses: actions/upload-artifact@v4
      with:
        name: signed-attestation
        path: |
          attestation-bundle.tar.gz
          attestation-bundle.tar.gz.sha256
          attestation-bundle/metadata.json.sig
    
    - name: Publish attestation
      run: |
        echo "🔐 Attestation generated and signed"
        echo "📦 Bundle: attestation-bundle.tar.gz"
        echo "🔑 Signature: attestation-bundle.tar.gz.sha256"
        echo "📋 Metadata: attestation-bundle/metadata.json"
        echo "✅ Merkle root: $(cat merkle.txt)"
    
    - name: Create release if on main
      if: github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: discovery-engine-${{ github.run_number }}
        release_name: Discovery Engine 2-Cat v${{ github.run_number }}
        body: |
          Discovery Engine 2-Cat Release
          
          **Merkle Root:** $(cat merkle.txt)
          
          **Artifacts:**
          - DCA.jsonl: Data-Carrying Actions
          - PCAP.json: Portfolio of Composite Actions
          - J.jsonl: Merkle Journal
          - metrics.json: Performance Metrics
          
          **Attestation:** Signed with Cosign
        draft: false
        prerelease: false
